name: Oracle DB Connection Workflow
on: [push]  # Trigger (adjust as needed)

jobs:
  oracle-test:
    runs-on: ubuntu-22.04  # Stable Ubuntu with libaio1 support&#8203;:contentReference[oaicite:6]{index=6}&#8203;:contentReference[oaicite:7]{index=7}
    env: 
      # (Optional) Set TNS_ADMIN if using tnsnames.ora and wallet files
      TNS_ADMIN: "$HOME/tns_admin"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install prerequisites (libaio1, alien, wget, unzip)
        run: |
          # Use apt-get with retries in case of transient network issues
          for attempt in 1 2 3; do
            sudo apt-get update && sudo apt-get install -y libaio1 alien wget unzip && break
            echo "APT install failed on attempt $attempt. Retrying..." >&2
            sleep 5
          done

      - name: Download Oracle Instant Client RPM
        run: |
          # Download latest Oracle Instant Client Basic package (21c in this example)&#8203;:contentReference[oaicite:8]{index=8}
          IC_URL="http://yum.oracle.com/repo/OracleLinux/OL7/oracle/instantclient21/x86_64/getPackage/oracle-instantclient-basic-21.17.0.0.0-1.x86_64.rpm"
          for attempt in 1 2 3; do
            wget -O instantclient.rpm "$IC_URL" && break
            echo "Download failed on attempt $attempt. Retrying..." >&2
            sleep 5
          done

      - name: Install Oracle Instant Client
        run: |
          sudo alien -i --scripts instantclient.rpm  # Convert RPM to .deb and install
          rm -f instantclient.rpm                    # Clean up the downloaded RPM
          # Export Oracle library path for cx_Oracle to find Instant Client libs&#8203;:contentReference[oaicite:9]{index=9}
          echo "LD_LIBRARY_PATH=/usr/lib/oracle/21/client64/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV

      - name: Install Python Oracle driver (cx_Oracle)
        run: pip install cx_Oracle

      - name: Verify Oracle DB connectivity
        env:
          ORACLE_USER: ${{ secrets.DB_USER }}
          ORACLE_PASSWORD: ${{ secrets.DB_PASSWORD }}
          ORACLE_DSN: ${{ secrets.DB_DSN }}   # e.g. Oracle connect descriptor or TNS name
        run: |
          python - << 'PYCODE'
          import cx_Oracle, os
          user = os.environ["ORACLE_USER"]
          pwd = os.environ["ORACLE_PASSWORD"]
          dsn = os.environ["ORACLE_DSN"]
          conn = cx_Oracle.connect(user, pwd, dsn)
          cur = conn.cursor()
          cur.execute("SELECT SYSDATE FROM dual")
          result = cur.fetchone()
          print(f"Database connected, SYSDATE is {result[0]}")
          conn.close()
          PYCODE
